language: cpp

os: linux
dist: bionic

env:
  global: 
    - CMAKE_BUILD_TYPE=RELEASE
    - SPACK_ROOT: $HOME/spack
    - PATH: $PATH:$SPACK_ROOT/bin
    - OMPI_MCA_orte_base_help_aggregate: 0

jobs:
  include:
    - name: build without external dependencies (linux)
      os: linux
      dist: bionic

    - name: build without external dependencies (osx)
      os: osx
      osx_image: xcode11
    
    - name: build with python3 (linux)
      os: linux
      dist: bionic
      python: "3.8"
      before_install:
        - pyenv local 3.8.1
        - pip3 install numpy
      addons:
        apt:
          packages:
            - python-dev
      env:
        - CMAKE_ARG="-DFTK_BUILD_PYFTK=ON -DFTK_BUILD_EXECUTABLES=OFF"

    - name: build with mpsolve (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libgmp-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env:
        - CMAKE_ARG="-DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with tbb (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libtbb-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_TBB=ON"

    - name: build with vtk (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libvtk7-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_VTK=ON -DFTK_USE_MPI=OFF -DFTK_USE_HDF5=OFF -DFTK_USE_NETCDF=OFF"
    
    - name: build with mpich (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libmpich-dev
            - mpich
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON"

    - name: build with cuda10 (linux)
      os: linux
      dist: bionic
      before_install:
        - sh tests/travis/install-cuda.sh
      env: 
        - CUDA=10.1.105-1
        - CUDA_SHORT_VER=10-1
        - CUDA_SHORT=10.1
        - UBUNTU_VERSION=ubuntu1804
        - CMAKE_ARG="-DFTK_USE_CUDA=ON -DCMAKE_CUDA_COMPILER=/usr/local/cuda-10.1/bin/nvcc"

    - name: build with dpcpp (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.repos.intel.com/oneapi all main'
              key_url: 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB'
          packages:
            - intel-oneapi-dpcpp-compiler
      before_install:
        - source /opt/intel/inteloneapi/compiler/latest/env/vars.sh
      env:
        - CMAKE_ARG="-DFTK_USE_SYCL=ON -DCMAKE_CXX_COMPILER=dpcpp"

    - name: build with paraview (linux)
      os: linux
      dist: bionic
      before_install:
        - sh tests/travis/install-paraview.sh
      env: 
        - CMAKE_ARG="-DFTK_BUILD_PARAVIEW=ON -DParaView_DIR=$HOME/paraview-5.8.1/lib/cmake/paraview-5.8"


  allow_failures:
    - name: build with mpich (osx)
      os: osx
      before_install:
        - brew install mpich
        #- sh tests/travis/install-mpich.sh
      osx_image: xcode11
      env:
        - CMAKE_ARG="-DFTK_USE_MPI=ON"

    - name: build with openmpi (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libopenmpi-dev 
            - openmpi-bin
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON"
    
    - name: build with mpsolve, netcdf, hdf5, vtk, and openmpi (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
            - libopenmpi-dev
            - openmpi-bin
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"


    - name: build with mpich from spack
      os: linux
      dist: bionic
      before_install:
        - sh tests/travis/install-spack.sh
        - source $SPACK_ROOT/share/spack/setup-env.sh
        - spack install mpich
        - spack load mpich
      addons:
        apt:
          packages:
            - gfortran
      env:
        - CMAKE_ARG="-DFTK_USE_MPI=ON"

    - name: build with vtk (osx)
      env: 
        - CMAKE_ARG="-DFTK_USE_VTK=ON"
      os: osx
      before_install:
        - sh tests/travis/install-vtk.sh
      osx_image: xcode11

    - name: build with hdf5 (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libhdf5-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_HDF5=ON"

    - name: build with netcdf (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_NETCDF=ON"

    - name: build with netcdf, hdf5, and vtk (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_NETCDF=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON"

    - name: build with mpsolve, netcdf, hdf5, and vtk (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env:
        - CMAKE_ARG="-DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with mpsolve, netcdf, hdf5, vtk, and mpich (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libvtk7-dev
            - libhdf5-dev
            - libnetcdf-dev
            - libmpich-dev
            - mpich
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env: 
        - CMAKE_ARG="-DCMAKE_C_COMPILER=/usr/bin/mpicc.mpich -DCMAKE_CXX_COMPILER=/usr/bin/mpicxx.mpich -DMPIEXEC_EXECUTABLE=/usr/bin/mpiexec.mpich -DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with mpsolve, netcdf, hdf5, vtk, cuda10, and mpich (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libvtk7-dev
            - libhdf5-dev
            - libnetcdf-dev
            - libmpich-dev
            - mpich
      before_install:
        - sh tests/travis/install-mpsolve.sh
        - sh tests/travis/install-cuda.sh
      env: 
        - CUDA=10.1.105-1
        - CUDA_SHORT_VER=10-1
        - CUDA_SHORT=10.1
        - UBUNTU_VERSION=ubuntu1804
        - CPATH=/usr/local/cuda-10.1/include
        - CMAKE_ARG="-DCMAKE_C_COMPILER=/usr/bin/mpicc.mpich -DCMAKE_CXX_COMPILER=/usr/bin/mpicxx.mpich -DMPIEXEC_EXECUTABLE=/usr/bin/mpiexec.mpich -DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DFTK_USE_CUDA=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-10.1"

    - name: build with mpsolve, netcdf, hdf5, vtk, cuda10, and openmpi (linux) # FIXME cmake has problem with this build
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libvtk7-dev
            - libhdf5-dev
            - libnetcdf-dev
            - libopenmpi-dev
            - openmpi-bin
      before_install:
        - sh tests/travis/install-mpsolve.sh
        - sh tests/travis/install-cuda.sh
      env: 
        - CUDA=10.1.105-1
        - CUDA_SHORT_VER=10-1
        - CUDA_SHORT=10.1
        - UBUNTU_VERSION=ubuntu1804
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DFTK_USE_CUDA=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so -DCMAKE_CUDA_COMPILER=/usr/local/cuda-10.1/bin/nvcc"

before_script:
  - mkdir build
  - cd build
  - cmake .. -DFTK_BUILD_TESTS=ON ${CMAKE_ARG}
  - make VERBOSE=1
  #- cmake --build .

script: 
  - ctest -VV

notifications:
  email:
    - guohanqi@gmail.com
